---
name: RSS Notifier
permissions: {}

on:
  issues:
    types:
      - opened

jobs:
  authorize:
    runs-on: ubuntu-latest
    outputs:
      authorized: ${{ steps.authorize.outputs.result }}
    steps:
      - name: Authorize
        id: authorize
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GH_BOT_TOKEN }}
          result-encoding: string
          script: |
            // get issue
            const issue = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
            });

            // get author
            const author = issue.data.user.login;

            // check if author is LizardByte-bot
            if (author === 'LizardByte-bot') {
                console.log('Author is LizardByte-bot');
            } else {
                console.log('Author is not LizardByte-bot');
                return 'false';
            }

            // check if label is blog
            const labels = issue.data.labels.map(label => label.name);
            if (labels.includes('blog')) {
                console.log('Label is blog');
            } else {
                console.log('Label is not blog');
                return 'false';
            }

            return 'true';

  discord:
    if: needs.authorize.outputs.authorized == 'true'
    needs: authorize
    outputs:
      post-url: "https://discord.com/channels/804382334370578482/804383203020374016"
    runs-on: ubuntu-latest
    steps:
      - name: discord
        uses: sarisia/actions-status-discord@v1
        with:
          avatar_url: ${{ vars.ORG_LOGO_URL }}256
          color: 0x${{ vars.COLOR_HEX_GREEN }}
          nodetail: true
          nofail: false
          title: ${{ github.event.issue.title }}
          url: ${{ github.event.issue.body }}
          username: ${{ secrets.DISCORD_USERNAME }}
          webhook: ${{ secrets.DISCORD_ANNOUNCEMENT_WEBHOOK }}

  facebook:
    if: needs.authorize.outputs.authorized == 'true'
    needs: authorize
    outputs:
      post-url: "https://www.facebook.com/LizardByteDev"
    runs-on: ubuntu-latest
    steps:
      - name: facebook-post-action
        uses: LizardByte/actions/actions/facebook_post@v2025.1020.14905
        with:
          page_id: ${{ secrets.FACEBOOK_PAGE_ID }}
          access_token: ${{ secrets.FACEBOOK_ACCESS_TOKEN }}
          message: ${{ github.event.issue.title }}
          url: ${{ github.event.issue.body }}

  reddit:
    if: needs.authorize.outputs.authorized == 'true'
    needs: authorize
    outputs:
      post-url: ${{ steps.post.outputs.postUrl }}
    runs-on: ubuntu-latest
    steps:
      - name: reddit
        id: post
        uses: bluwy/release-for-reddit-action@v2
        with:
          username: ${{ secrets.REDDIT_USERNAME }}
          password: ${{ secrets.REDDIT_PASSWORD }}
          app-id: ${{ secrets.REDDIT_CLIENT_ID }}
          app-secret: ${{ secrets.REDDIT_CLIENT_SECRET }}
          subreddit: ${{ vars.REDDIT_SUBREDDIT }}
          title: ${{ github.event.issue.title }}
          url: ${{ github.event.issue.body }}
          flair-id: ${{ secrets.REDDIT_FLAIR_ID }}  # https://www.reddit.com/r/<subreddit>>/api/link_flair.json

  x:
    if: needs.authorize.outputs.authorized == 'true'
    needs: authorize
    outputs:
      post-url: "https://x.com/LizardByteDev"
    runs-on: ubuntu-latest
    steps:
      - name: x
        uses: nearform-actions/github-action-notify-twitter@v1
        # alternative: noweh/post-tweet-v2-action@v1.0
        with:
          message: "${{ github.event.issue.title }}: ${{ github.event.issue.body }}"
          twitter-app-key: ${{ secrets.X_APP_KEY }}
          twitter-app-secret: ${{ secrets.X_APP_SECRET }}
          twitter-access-token: ${{ secrets.X_ACCESS_TOKEN }}
          twitter-access-token-secret: ${{ secrets.X_ACCESS_TOKEN_SECRET }}

  close-issue:
    if: needs.authorize.outputs.authorized == 'true'
    needs:
      - authorize
      - discord
      - facebook
      - reddit
      - x
    runs-on: ubuntu-latest
    steps:
      - name: Close issue
        env:
          GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        run: |
          get_emoji() {
            if [ "$1" == "success" ]; then
              echo ":white_check_mark:"
            elif [ "$1" == "failure" ]; then
              echo ":x:"
            else
              echo ":grey_question:"
            fi
          }

          # Build comment as a single line with literal newlines
          comment="| Job | Status | Post URL |
          | --- |:------:| -------- |
          | Discord | $(get_emoji "${{ needs.discord.result }}") | ${{ needs.discord.outputs.post-url }} |
          | Facebook | $(get_emoji "${{ needs.facebook.result }}") | ${{ needs.facebook.outputs.post-url }} |
          | Reddit | $(get_emoji "${{ needs.reddit.result }}") | ${{ needs.reddit.outputs.post-url }} |
          | X | $(get_emoji "${{ needs.x.result }}") | ${{ needs.x.outputs.post-url }} |"

          close_reason="completed"
          lock_reason="resolved"

          gh issue close ${{ github.event.issue.number }} \
            --comment "${comment}" \
            --reason "${close_reason}" \
            --repo "${{ github.repository }}"
          gh issue lock ${{ github.event.issue.number }} \
            --reason "${lock_reason}" \
            --repo "${{ github.repository }}"
